{
  "environment" : "unittest",
  "summary" : "南川P.F.A教程：Python在财经领域的最佳实践\n2020年1月20日",
  "title" : "NC-P.F.A Tutorial",
  "authors" : [
    "mark shawn"
  ],
  "programming_language" : "Python",
  "language" : "en",
  "course_type" : "PyCharm",
  "solutions_hidden" : true,
  "items" : [
    {
      "title" : "lesson1",
      "task_list" : [
        {
          "name" : "task1",
          "files" : {
            "tests/test_task.py" : {
              "name" : "tests/test_task.py",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : "import unittest\n\nfrom ..task import get_next_tab_pos\n\n\nclass TestCase(unittest.TestCase):\n    def test_add(self):\n        self.assertEqual(get_next_tab_pos(4, 4), 9,\n                         msg=\"When you have inputted four chars and then press one TAB key with width of FOUR, \"\n                             \"then the cursor would be at the 9th place, am I right!\")\n\n        self.assertEqual(get_next_tab_pos(1, 4), 5,\n                         msg=\"When you have inputted one char and then press one TAB key with width of FOUR, \"\n                             \"then the cursor would be at the 5th place, am I right!\")\n\n        self.assertEqual(get_next_tab_pos(5, 3), 7,\n                         msg=\"When you have inputted 5 char and then press one TAB key with width of THREE, \"\n                             \"then the cursor would be at the 7th place, am I right!\")\n"
            },
            "__init__.py" : {
              "name" : "__init__.py",
              "placeholders" : [ ],
              "is_visible" : true,
              "text" : ""
            },
            "tests/__init__.py" : {
              "name" : "tests/__init__.py",
              "placeholders" : [ ],
              "is_visible" : false,
              "text" : ""
            },
            "task.py" : {
              "name" : "task.py",
              "placeholders" : [
                {
                  "offset" : 134,
                  "length" : 22,
                  "possible_answer" : "return (cur_pos-1) // TAB_WIDTH * TAB_WIDTH + 1",
                  "placeholder_text" : "Input your answer here"
                }
              ],
              "is_visible" : true,
              "text" : "\n\ndef get_next_tab_pos(cur_pos, TAB_WIDTH):\n    if cur_pos % TAB_WIDTH == 0:\n        return cur_pos + TAB_WIDTH + 1\n    else:\n        Input your answer here\n"
            }
          },
          "description_text" : "<html>\nTab and Space\n<div class=\"hint\">\n  This is a rather easy problem concerning with algorithm.\n  <br>\n  But to a beginner, maybe how to write a qualified code is more challenging.\n  <br>\n  Best Wishes!\n</div>\n</html>",
          "description_format" : "HTML",
          "feedback_link" : {
            "link_type" : "STEPIK"
          },
          "task_type" : "edu"
        }
      ],
      "type" : "lesson"
    }
  ],
  "version" : 11
}
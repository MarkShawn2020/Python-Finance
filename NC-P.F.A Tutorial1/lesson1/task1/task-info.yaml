type: edu
files:
- name: tests/test_task.py
  visible: false
  text: |
    import unittest

    from ..task import get_next_tab_pos


    class TestCase(unittest.TestCase):
        def test_add(self):
            self.assertEqual(get_next_tab_pos(4, 4), 9,
                             msg="When you have inputted four chars and then press one TAB key with width of FOUR, "
                                 "then the cursor would be at the 9th place, am I right!")

            self.assertEqual(get_next_tab_pos(1, 4), 5,
                             msg="When you have inputted one char and then press one TAB key with width of FOUR, "
                                 "then the cursor would be at the 5th place, am I right!")

            self.assertEqual(get_next_tab_pos(5, 3), 7,
                             msg="When you have inputted 5 char and then press one TAB key with width of THREE, "
                                 "then the cursor would be at the 7th place, am I right!")
  learner_created: false
- name: __init__.py
  visible: true
  learner_created: false
- name: tests/__init__.py
  visible: false
  learner_created: false
- name: task.py
  visible: true
  placeholders:
  - offset: 134
    length: 8
    placeholder_text: Input your answer here
    initial_state:
      length: 22
      offset: 134
    initialized_from_dependency: false
    possible_answer: return (cur_pos-1) // TAB_WIDTH * TAB_WIDTH + 1
    selected: true
    status: Failed
  text: |2


    def get_next_tab_pos(cur_pos, TAB_WIDTH):
        if cur_pos % TAB_WIDTH == 0:
            return cur_pos + TAB_WIDTH + 1
        else:
            Input your answer here
  learner_created: false
status: Failed
record: -1
